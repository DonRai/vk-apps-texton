{"version":3,"sources":["components/Search.js","panels/Home.js","panels/Word.js","App.js","index.js"],"names":["SearchHeader","go","useState","search","setSearch","words","setWords","separator","placeholder","value","onChange","e","persist","word","target","length","fetch","then","response","json","data","after","mode","className","map","onClick","IID","POPULAR","id","Home","shuffled","sort","Math","random","a","b","header","item","Word","options","antonyms","phraseology","synonyms","wordData","setWordData","copied","setCopied","loading","setLoading","activeTab","setActiveTab","useEffect","catch","copy","setTimeout","left","disabled","level","weight","selected","description","syn","split","join","before","text","onCopy","s_id","index","gender","wcase","phrase","type","multiline","type_sub","type_ssub","plural","comp","soul","transit","perfect","face","kind","time","inf","vozv","nakl","short","onClose","setState","snackbar","size","style","background","fill","width","height","App","activePanel","setActivePanel","panelOptions","setPanelOptions","popout","setPopout","bridge","subscribe","detail","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","panel","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c329b96b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Group, Cell, Card, Search } from \"@vkontakte/vkui\";\n\nimport \"./Search.css\";\n\nconst SearchHeader = ({ go }) => {\n  const [search, setSearch] = useState(\"\");\n  const [words, setWords] = useState([]);\n\n  const findWords = (e) => {\n    e.persist();\n    const word = e.target.value;\n    setSearch(word);\n\n    if (word.length > 1) {\n      fetch(`https://texton.me/api/words/v1/${word}`)\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setWords(data);\n        });\n    } else {\n      setWords([]);\n    }\n  };\n\n  return (\n    <Group separator=\"hide\">\n      <Search\n        placeholder=\"Введите слово для поиска\"\n        value={search}\n        onChange={findWords}\n        after={null}\n      />\n      {words.length > 0 && (\n        <Card mode=\"shadow\" className=\"SearchHeader\">\n          {words.map((word) => (\n            <Cell\n              onClick={() => {\n                setWords([]);\n                go(\"word\", { word: word.word });\n              }}\n              key={word.IID}\n            >\n              <div className=\"SearchHeader__Word\">{word.word}</div>\n            </Cell>\n          ))}\n        </Card>\n      )}\n    </Group>\n  );\n};\n\nexport default SearchHeader;\n","import React from \"react\";\nimport { Panel, PanelHeader, Header, Group, Cell } from \"@vkontakte/vkui\";\n\nimport SearchHeader from \"../components/Search\";\n\nconst POPULAR = [\n  { id: 1, word: \"врач\" },\n  { id: 2, word: \"контроль\" },\n  { id: 3, word: \"эмоция\" },\n  { id: 4, word: \"безумный\" },\n  { id: 5, word: \"вода\" },\n  { id: 6, word: \"город\" },\n];\n\nconst Home = ({ id, go }) => {\n  const shuffled = POPULAR.map((value) => ({ value, sort: Math.random() }))\n    .sort((a, b) => a.sort - b.sort)\n    .map(({ value }) => value);\n\n  return (\n    <Panel id={id}>\n      <PanelHeader>Синонимы и антонимы — TextOn.me</PanelHeader>\n      <SearchHeader go={go} />\n      <Group header={<Header mode=\"secondary\">Часто ищут</Header>}>\n        {shuffled.map((item) => (\n          <Cell key={item.id} onClick={() => go(\"word\", { word: item.word })}>\n            <span className=\"LinkButton\">{item.word}</span>\n          </Cell>\n        ))}\n      </Group>\n    </Panel>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport {\n  Panel,\n  PanelHeader,\n  Title,\n  PanelHeaderBack,\n  Group,\n  Cell,\n  List,\n  Snackbar,\n  Avatar,\n  InfoRow,\n  Tabs,\n  TabsItem,\n  HorizontalScroll,\n  PanelSpinner,\n} from \"@vkontakte/vkui\";\nimport { Icon24Copy, Icon16Done } from \"@vkontakte/icons\";\n\nimport SearchHeader from \"../components/Search\";\nimport \"./Word.css\";\n\nconst Word = ({ id, options, go }) => {\n  const [wordData, setWordData] = useState({\n    antonyms: [],\n    phraseology: [],\n    synonyms: [],\n  });\n  const [copied, setCopied] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState(1);\n\n  useEffect(() => {\n    if (options.word) {\n      setLoading(true);\n\n      fetch(`https://texton.me/api/word/v1/${options.word}`)\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setWordData(data);\n          setActiveTab(1);\n          setLoading(false);\n        })\n        .catch(() => {\n          setWordData({ antonyms: [], phraseology: [], synonyms: [] });\n          setActiveTab(1);\n          setLoading(false);\n        });\n    }\n  }, [options.word]);\n\n  const copy = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, 2000);\n  };\n\n  return (\n    <Panel id={id}>\n      <PanelHeader left={<PanelHeaderBack onClick={() => go(\"home\", {})} />}>\n        Синонимы и антонимы — TextOn.me\n      </PanelHeader>\n      <SearchHeader go={go} />\n\n      {loading ? (\n        <PanelSpinner />\n      ) : (\n        <>\n          <Cell disabled>\n            <Title level=\"1\" weight=\"semibold\">\n              {options.word}\n            </Title>\n          </Cell>\n\n          <Tabs mode=\"default\">\n            <HorizontalScroll>\n              <TabsItem\n                selected={activeTab === 1}\n                onClick={() => setActiveTab(1)}\n              >\n                Синонимы\n              </TabsItem>\n              {wordData.antonyms.length > 0 && (\n                <TabsItem\n                  selected={activeTab === 2}\n                  onClick={() => setActiveTab(2)}\n                >\n                  Антонимы\n                </TabsItem>\n              )}\n              {wordData.phraseology.length > 0 && (\n                <TabsItem\n                  selected={activeTab === 3}\n                  onClick={() => setActiveTab(3)}\n                >\n                  Фразеологизмы\n                </TabsItem>\n              )}\n              <TabsItem\n                selected={activeTab === 4}\n                onClick={() => setActiveTab(4)}\n              >\n                Морфологический разбор\n              </TabsItem>\n            </HorizontalScroll>\n          </Tabs>\n\n          {activeTab === 1 && (\n            <Group>\n              {wordData.synonyms.length > 0 &&\n                wordData.synonyms.map((item) => (\n                  <Cell\n                    key={item.s_id}\n                    description={item.syn.split(\",\").join(\", \")}\n                    disabled\n                    before={\n                      <CopyToClipboard text={item.word} onCopy={copy}>\n                        <Icon24Copy />\n                      </CopyToClipboard>\n                    }\n                  >\n                    <span\n                      className=\"LinkButton\"\n                      onClick={() => go(\"word\", { word: item.word })}\n                    >\n                      {item.word}\n                    </span>\n                  </Cell>\n                ))}\n            </Group>\n          )}\n\n          {activeTab === 2 && (\n            <Group>\n              {wordData.antonyms.length > 0 &&\n                wordData.antonyms.map((item, index) => (\n                  <Cell\n                    key={`${item.IID}-${item.word}-${item.wcase}-${index}`}\n                    description={\n                      item.gender ? <span>{item.gender}. р.</span> : null\n                    }\n                    disabled\n                    before={\n                      <CopyToClipboard text={item.word} onCopy={copy}>\n                        <Icon24Copy />\n                      </CopyToClipboard>\n                    }\n                  >\n                    <span\n                      className=\"LinkButton\"\n                      onClick={() => go(\"word\", { word: item.word })}\n                    >\n                      {item.word}\n                    </span>\n                  </Cell>\n                ))}\n            </Group>\n          )}\n\n          {activeTab === 3 && (\n            <Group>\n              {wordData.phraseology.length > 0 &&\n                wordData.phraseology.map((item) => (\n                  <Cell key={item.id} disabled>\n                    {item.phrase}\n                  </Cell>\n                ))}\n            </Group>\n          )}\n\n          {activeTab === 4 && (\n            <Group>\n              <List>\n                {wordData.type ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Часть речи\">{wordData.type}</InfoRow>\n                  </Cell>\n                ) : null}\n                {wordData.type_sub ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Подтип\">{wordData.type_sub}</InfoRow>\n                  </Cell>\n                ) : null}\n                {wordData.type_ssub ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Под-подтип\">{wordData.type_ssub}</InfoRow>\n                  </Cell>\n                ) : null}\n\n                {wordData.plural === 0 ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Число\">единственное</InfoRow>\n                  </Cell>\n                ) : null}\n                {wordData.plural === 1 ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Число\">множественное</InfoRow>\n                  </Cell>\n                ) : null}\n\n                {wordData.gender ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Род\">{wordData.gender}</InfoRow>\n                  </Cell>\n                ) : null}\n                {wordData.wcase ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Падеж\">{wordData.wcase}.</InfoRow>\n                  </Cell>\n                ) : null}\n                {wordData.comp ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Сравн. форма прилаг.\">\n                      {wordData.comp}\n                    </InfoRow>\n                  </Cell>\n                ) : null}\n\n                {wordData.soul === 0 ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Одушевленность\">неодушевленное</InfoRow>\n                  </Cell>\n                ) : null}\n                {wordData.soul === 1 ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Одушевленность\">одушевленное</InfoRow>\n                  </Cell>\n                ) : null}\n\n                {wordData.transit ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Переходность глагола\">\n                      {wordData.transit}\n                    </InfoRow>\n                  </Cell>\n                ) : null}\n\n                {wordData.perfect === 0 ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Признак соверш. формы\">нет</InfoRow>\n                  </Cell>\n                ) : null}\n                {wordData.perfect === 1 ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Признак соверш. формы\">да</InfoRow>\n                  </Cell>\n                ) : null}\n\n                {wordData.face ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Лицо глагола\">{wordData.face}</InfoRow>\n                  </Cell>\n                ) : null}\n                {wordData.kind ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Вид глагола\">{wordData.kind}</InfoRow>\n                  </Cell>\n                ) : null}\n                {wordData.time ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Временная форма глагола\">\n                      {wordData.time}\n                    </InfoRow>\n                  </Cell>\n                ) : null}\n\n                {wordData.inf === 0 ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Признак инфинитив\">нет</InfoRow>\n                  </Cell>\n                ) : null}\n                {wordData.inf === 1 ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Признак инфинитив\">да</InfoRow>\n                  </Cell>\n                ) : null}\n\n                {wordData.vozv === 0 ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Признак возвратной формы глагола\">\n                      нет\n                    </InfoRow>\n                  </Cell>\n                ) : null}\n                {wordData.vozv === 0 ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Признак возвратной формы глагола\">\n                      нет\n                    </InfoRow>\n                  </Cell>\n                ) : null}\n\n                {wordData.nakl && (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Наклонение или залог глагола\">\n                      {wordData.nakl}\n                    </InfoRow>\n                  </Cell>\n                )}\n\n                {wordData.short === 0 ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Признак краткой формы прилагательного\">\n                      нет\n                    </InfoRow>\n                  </Cell>\n                ) : null}\n                {wordData.short === 1 ? (\n                  <Cell multiline disabled>\n                    <InfoRow header=\"Признак краткой формы прилагательного\">\n                      да\n                    </InfoRow>\n                  </Cell>\n                ) : null}\n              </List>\n            </Group>\n          )}\n        </>\n      )}\n\n      {copied && (\n        <Snackbar\n          onClose={() => this.setState({ snackbar: null })}\n          before={\n            <Avatar size={24} style={{ background: \"var(--accent)\" }}>\n              <Icon16Done fill=\"#fff\" width={14} height={14} />\n            </Avatar>\n          }\n        >\n          Слово скопировано\n        </Snackbar>\n      )}\n    </Panel>\n  );\n};\n\nWord.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  options: PropTypes.object.isRequired,\n};\n\nexport default Word;\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport {\n  AdaptivityProvider,\n  AppRoot,\n  View,\n  ScreenSpinner,\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport Home from \"./panels/Home\";\nimport Word from \"./panels/Word\";\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [panelOptions, setPanelOptions] = useState({});\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n\n    setPopout(null);\n  }, []);\n\n  const go = (panel, options) => {\n    setActivePanel(panel);\n    setPanelOptions(options);\n  };\n\n  return (\n    <AdaptivityProvider>\n      <AppRoot>\n        <View activePanel={activePanel} popout={popout}>\n          <Home id=\"home\" go={go} />\n          <Word id=\"word\" go={go} options={panelOptions} />\n        </View>\n      </AppRoot>\n    </AdaptivityProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}